#!/usr/bin/env python

"""
Proxy for the octomap data.
Transmit the data from the octomap server, and
sometimes creates an obstacle to test the replanification system.
"""

import rospy, octomap, numpy as np
from geometry_msgs.msg import PoseStamped
from octomap_msgs.msg import Octomap
from sensor_msgs import point_cloud2
from sensor_msgs.msg import PointCloud2, PointField
from std_msgs.msg import Header


rospy.init_node('octomap_proxy', anonymous=True)
rate = rospy.Rate(10)
octree = octomap.OcTree(0.1)
pub = rospy.Publisher('/autopilot/point_cloud', PointCloud2, queue_size=2)

rate.sleep()

bbmin = np.array([0, -2, 0])
bbmax = np.array([1, -1, 1])
n = 20 * np.max(np.abs(bbmax - bbmin))
x = np.linspace(bbmin[0], bbmax[0], n)
y = np.linspace(bbmin[1], bbmax[1], n)
z = np.linspace(bbmin[2], bbmax[2], n)
points = np.array(np.meshgrid(x, y, z)).T.reshape(-1, 3)

fields = [
    PointField('x', 0, PointField.FLOAT32, 1),
    PointField('y', 4, PointField.FLOAT32, 1),
    PointField('z', 8, PointField.FLOAT32, 1),
]

header = Header()
header.frame_id = 'map'
pc2 = point_cloud2.create_cloud(header, fields, points)


start = rospy.Time.now()
while not rospy.is_shutdown() and (rospy.Time.now() - start).to_sec() < 2:
    pub.publish(pc2)
    rate.sleep()